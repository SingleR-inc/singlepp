// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// integrate_singlepp
Rcpp::List integrate_singlepp(Rcpp::NumericMatrix test, Rcpp::List results, Rcpp::List refs, Rcpp::List labels, Rcpp::List prebuilt, double quantile);
RcppExport SEXP _singlepp_tests_integrate_singlepp(SEXP testSEXP, SEXP resultsSEXP, SEXP refsSEXP, SEXP labelsSEXP, SEXP prebuiltSEXP, SEXP quantileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type test(testSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type results(resultsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type refs(refsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type prebuilt(prebuiltSEXP);
    Rcpp::traits::input_parameter< double >::type quantile(quantileSEXP);
    rcpp_result_gen = Rcpp::wrap(integrate_singlepp(test, results, refs, labels, prebuilt, quantile));
    return rcpp_result_gen;
END_RCPP
}
// run_singlepp
Rcpp::List run_singlepp(Rcpp::NumericMatrix test, Rcpp::NumericMatrix ref, Rcpp::IntegerVector labels, Rcpp::List markers, double quantile, bool fine_tune, double tune_thresh, int top);
RcppExport SEXP _singlepp_tests_run_singlepp(SEXP testSEXP, SEXP refSEXP, SEXP labelsSEXP, SEXP markersSEXP, SEXP quantileSEXP, SEXP fine_tuneSEXP, SEXP tune_threshSEXP, SEXP topSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type test(testSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ref(refSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type labels(labelsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type markers(markersSEXP);
    Rcpp::traits::input_parameter< double >::type quantile(quantileSEXP);
    Rcpp::traits::input_parameter< bool >::type fine_tune(fine_tuneSEXP);
    Rcpp::traits::input_parameter< double >::type tune_thresh(tune_threshSEXP);
    Rcpp::traits::input_parameter< int >::type top(topSEXP);
    rcpp_result_gen = Rcpp::wrap(run_singlepp(test, ref, labels, markers, quantile, fine_tune, tune_thresh, top));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_singlepp_tests_integrate_singlepp", (DL_FUNC) &_singlepp_tests_integrate_singlepp, 6},
    {"_singlepp_tests_run_singlepp", (DL_FUNC) &_singlepp_tests_run_singlepp, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_singlepp_tests(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
